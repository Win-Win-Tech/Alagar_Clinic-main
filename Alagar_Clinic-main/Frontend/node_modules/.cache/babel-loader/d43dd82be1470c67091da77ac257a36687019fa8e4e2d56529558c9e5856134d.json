{"ast":null,"code":"import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\n// ============================== Shared ==============================\nconst genSharedBackTopStyle = token => {\n  const {\n    componentCls,\n    backTopFontSize,\n    backTopSize,\n    zIndexPopup\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      insetInlineEnd: token.backTopInlineEnd,\n      insetBlockEnd: token.backTopBlockEnd,\n      zIndex: zIndexPopup,\n      width: 40,\n      height: 40,\n      cursor: 'pointer',\n      '&:empty': {\n        display: 'none'\n      },\n      [\"\".concat(componentCls, \"-content\")]: {\n        width: backTopSize,\n        height: backTopSize,\n        overflow: 'hidden',\n        color: token.backTopColor,\n        textAlign: 'center',\n        backgroundColor: token.backTopBackground,\n        borderRadius: backTopSize,\n        transition: \"all \".concat(token.motionDurationMid),\n        '&:hover': {\n          backgroundColor: token.backTopHoverBackground,\n          transition: \"all \".concat(token.motionDurationMid)\n        }\n      },\n      // change to .backtop .backtop-icon\n      [\"\".concat(componentCls, \"-icon\")]: {\n        fontSize: backTopFontSize,\n        lineHeight: \"\".concat(backTopSize, \"px\")\n      }\n    })\n  };\n};\nconst genMediaBackTopStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [\"@media (max-width: \".concat(token.screenMD, \"px)\")]: {\n      [componentCls]: {\n        insetInlineEnd: token.backTopInlineEndMD\n      }\n    },\n    [\"@media (max-width: \".concat(token.screenXS, \"px)\")]: {\n      [componentCls]: {\n        insetInlineEnd: token.backTopInlineEndXS\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('BackTop', token => {\n  const {\n    fontSizeHeading3,\n    colorTextDescription,\n    colorTextLightSolid,\n    colorText,\n    controlHeightLG\n  } = token;\n  const backTopToken = mergeToken(token, {\n    backTopBackground: colorTextDescription,\n    backTopColor: colorTextLightSolid,\n    backTopHoverBackground: colorText,\n    backTopFontSize: fontSizeHeading3,\n    backTopSize: controlHeightLG,\n    backTopBlockEnd: controlHeightLG * 1.25,\n    backTopInlineEnd: controlHeightLG * 2.5,\n    backTopInlineEndMD: controlHeightLG * 1.5,\n    backTopInlineEndXS: controlHeightLG * 0.5\n  });\n  return [genSharedBackTopStyle(backTopToken), genMediaBackTopStyle(backTopToken)];\n}, token => ({\n  zIndexPopup: token.zIndexBase + 10\n}));","map":{"version":3,"names":["genComponentStyleHook","mergeToken","resetComponent","genSharedBackTopStyle","token","componentCls","backTopFontSize","backTopSize","zIndexPopup","Object","assign","position","insetInlineEnd","backTopInlineEnd","insetBlockEnd","backTopBlockEnd","zIndex","width","height","cursor","display","concat","overflow","color","backTopColor","textAlign","backgroundColor","backTopBackground","borderRadius","transition","motionDurationMid","backTopHoverBackground","fontSize","lineHeight","genMediaBackTopStyle","screenMD","backTopInlineEndMD","screenXS","backTopInlineEndXS","fontSizeHeading3","colorTextDescription","colorTextLightSolid","colorText","controlHeightLG","backTopToken","zIndexBase"],"sources":["C:/Users/HP/Downloads/Alagar_Clinic-main/Alagar_Clinic-main/Frontend/node_modules/antd/es/back-top/style/index.js"],"sourcesContent":["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\n// ============================== Shared ==============================\nconst genSharedBackTopStyle = token => {\n  const {\n    componentCls,\n    backTopFontSize,\n    backTopSize,\n    zIndexPopup\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      insetInlineEnd: token.backTopInlineEnd,\n      insetBlockEnd: token.backTopBlockEnd,\n      zIndex: zIndexPopup,\n      width: 40,\n      height: 40,\n      cursor: 'pointer',\n      '&:empty': {\n        display: 'none'\n      },\n      [`${componentCls}-content`]: {\n        width: backTopSize,\n        height: backTopSize,\n        overflow: 'hidden',\n        color: token.backTopColor,\n        textAlign: 'center',\n        backgroundColor: token.backTopBackground,\n        borderRadius: backTopSize,\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          backgroundColor: token.backTopHoverBackground,\n          transition: `all ${token.motionDurationMid}`\n        }\n      },\n      // change to .backtop .backtop-icon\n      [`${componentCls}-icon`]: {\n        fontSize: backTopFontSize,\n        lineHeight: `${backTopSize}px`\n      }\n    })\n  };\n};\nconst genMediaBackTopStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`@media (max-width: ${token.screenMD}px)`]: {\n      [componentCls]: {\n        insetInlineEnd: token.backTopInlineEndMD\n      }\n    },\n    [`@media (max-width: ${token.screenXS}px)`]: {\n      [componentCls]: {\n        insetInlineEnd: token.backTopInlineEndXS\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('BackTop', token => {\n  const {\n    fontSizeHeading3,\n    colorTextDescription,\n    colorTextLightSolid,\n    colorText,\n    controlHeightLG\n  } = token;\n  const backTopToken = mergeToken(token, {\n    backTopBackground: colorTextDescription,\n    backTopColor: colorTextLightSolid,\n    backTopHoverBackground: colorText,\n    backTopFontSize: fontSizeHeading3,\n    backTopSize: controlHeightLG,\n    backTopBlockEnd: controlHeightLG * 1.25,\n    backTopInlineEnd: controlHeightLG * 2.5,\n    backTopInlineEndMD: controlHeightLG * 1.5,\n    backTopInlineEndXS: controlHeightLG * 0.5\n  });\n  return [genSharedBackTopStyle(backTopToken), genMediaBackTopStyle(backTopToken)];\n}, token => ({\n  zIndexPopup: token.zIndexBase + 10\n}));"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst genQRCodeStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorSplit),\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      [\"& > \".concat(componentCls, \"-mask\")]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [\"& > \".concat(componentCls, \"-expired\")]: {\n          color: token.QRCodeExpiredTextColor\n        }\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [\"\".concat(componentCls, \"-borderless\")]: {\n      borderColor: 'transparent'\n    }\n  };\n};\nexport default genComponentStyleHook('QRCode', token => genQRCodeStyle(mergeToken(token, {\n  QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\n  QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\n})));","map":{"version":3,"names":["resetComponent","genComponentStyleHook","mergeToken","genQRCodeStyle","token","componentCls","Object","assign","display","justifyContent","alignItems","padding","paddingSM","backgroundColor","colorWhite","borderRadius","borderRadiusLG","border","concat","lineWidth","lineType","colorSplit","position","width","height","overflow","insetBlockStart","insetInlineStart","zIndex","flexDirection","color","colorText","lineHeight","background","QRCodeMaskBackgroundColor","textAlign","QRCodeExpiredTextColor","marginBlockEnd","marginXS","fontSize","controlHeight","borderColor"],"sources":["C:/Users/HP/Downloads/Alagar_Clinic-main/Alagar_Clinic-main/Frontend/node_modules/antd/es/qr-code/style/index.js"],"sourcesContent":["import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst genQRCodeStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorSplit}`,\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      [`& > ${componentCls}-mask`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [`& > ${componentCls}-expired`]: {\n          color: token.QRCodeExpiredTextColor\n        }\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent'\n    }\n  };\n};\nexport default genComponentStyleHook('QRCode', token => genQRCodeStyle(mergeToken(token, {\n  QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\n  QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\n})));"],"mappings":"AAAA,SAASA,cAAc,QAAQ,aAAa;AAC5C,SAASC,qBAAqB,EAAEC,UAAU,QAAQ,sBAAsB;AACxE,MAAMC,cAAc,GAAGC,KAAK,IAAI;EAC9B,MAAM;IACJC;EACF,CAAC,GAAGD,KAAK;EACT,OAAO;IACL,CAACC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,cAAc,CAACI,KAAK,CAAC,CAAC,EAAE;MACtEI,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAEP,KAAK,CAACQ,SAAS;MACxBC,eAAe,EAAET,KAAK,CAACU,UAAU;MACjCC,YAAY,EAAEX,KAAK,CAACY,cAAc;MAClCC,MAAM,KAAAC,MAAA,CAAKd,KAAK,CAACe,SAAS,SAAAD,MAAA,CAAMd,KAAK,CAACgB,QAAQ,OAAAF,MAAA,CAAId,KAAK,CAACiB,UAAU,CAAE;MACpEC,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,QAAQ;MAClB,QAAAP,MAAA,CAAQb,YAAY,aAAU;QAC5BiB,QAAQ,EAAE,UAAU;QACpBI,eAAe,EAAE,CAAC;QAClBC,gBAAgB,EAAE,CAAC;QACnBC,MAAM,EAAE,EAAE;QACVpB,OAAO,EAAE,MAAM;QACfqB,aAAa,EAAE,QAAQ;QACvBpB,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBa,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdM,KAAK,EAAE1B,KAAK,CAAC2B,SAAS;QACtBC,UAAU,EAAE5B,KAAK,CAAC4B,UAAU;QAC5BC,UAAU,EAAE7B,KAAK,CAAC8B,yBAAyB;QAC3CC,SAAS,EAAE,QAAQ;QACnB,QAAAjB,MAAA,CAAQb,YAAY,gBAAa;UAC/ByB,KAAK,EAAE1B,KAAK,CAACgC;QACf;MACF,CAAC;MACD,QAAQ,EAAE;QACRC,cAAc,EAAEjC,KAAK,CAACkC,QAAQ;QAC9BC,QAAQ,EAAEnC,KAAK,CAACoC;MAClB;IACF,CAAC,CAAC;IACF,IAAAtB,MAAA,CAAIb,YAAY,mBAAgB;MAC9BoC,WAAW,EAAE;IACf;EACF,CAAC;AACH,CAAC;AACD,eAAexC,qBAAqB,CAAC,QAAQ,EAAEG,KAAK,IAAID,cAAc,CAACD,UAAU,CAACE,KAAK,EAAE;EACvFgC,sBAAsB,EAAE,qBAAqB;EAC7CF,yBAAyB,EAAE;AAC7B,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const genBorderedStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const tableBorder = \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.tableBorderColor);\n  const getSizeBorderStyle = (size, paddingVertical, paddingHorizontal) => ({\n    [\"&\".concat(componentCls, \"-\").concat(size)]: {\n      [\"> \".concat(componentCls, \"-container\")]: {\n        [\"> \".concat(componentCls, \"-content, > \").concat(componentCls, \"-body\")]: {\n          [\"\\n            > table > tbody > tr > th,\\n            > table > tbody > tr > td\\n          \"]: {\n            [\"> \".concat(componentCls, \"-expanded-row-fixed\")]: {\n              margin: \"-\".concat(paddingVertical, \"px -\").concat(paddingHorizontal + token.lineWidth, \"px\")\n            }\n          }\n        }\n      }\n    }\n  });\n  return {\n    [\"\".concat(componentCls, \"-wrapper\")]: {\n      [\"\".concat(componentCls).concat(componentCls, \"-bordered\")]: Object.assign(Object.assign(Object.assign({\n        // ============================ Title =============================\n        [\"> \".concat(componentCls, \"-title\")]: {\n          border: tableBorder,\n          borderBottom: 0\n        },\n        // ============================ Content ============================\n        [\"> \".concat(componentCls, \"-container\")]: {\n          borderInlineStart: tableBorder,\n          borderTop: tableBorder,\n          [\"\\n            > \".concat(componentCls, \"-content,\\n            > \").concat(componentCls, \"-header,\\n            > \").concat(componentCls, \"-body,\\n            > \").concat(componentCls, \"-summary\\n          \")]: {\n            '> table': {\n              // ============================= Cell =============================\n              [\"\\n                > thead > tr > th,\\n                > thead > tr > td,\\n                > tbody > tr > th,\\n                > tbody > tr > td,\\n                > tfoot > tr > th,\\n                > tfoot > tr > td\\n              \"]: {\n                borderInlineEnd: tableBorder\n              },\n              // ============================ Header ============================\n              '> thead': {\n                '> tr:not(:last-child) > th': {\n                  borderBottom: tableBorder\n                },\n                '> tr > th::before': {\n                  backgroundColor: 'transparent !important'\n                }\n              },\n              // Fixed right should provides additional border\n              [\"\\n                > thead > tr,\\n                > tbody > tr,\\n                > tfoot > tr\\n              \"]: {\n                [\"> \".concat(componentCls, \"-cell-fix-right-first::after\")]: {\n                  borderInlineEnd: tableBorder\n                }\n              },\n              // ========================== Expandable ==========================\n              [\"\\n                > tbody > tr > th,\\n                > tbody > tr > td\\n              \"]: {\n                [\"> \".concat(componentCls, \"-expanded-row-fixed\")]: {\n                  margin: \"-\".concat(token.tablePaddingVertical, \"px -\").concat(token.tablePaddingHorizontal + token.lineWidth, \"px\"),\n                  '&::after': {\n                    position: 'absolute',\n                    top: 0,\n                    insetInlineEnd: token.lineWidth,\n                    bottom: 0,\n                    borderInlineEnd: tableBorder,\n                    content: '\"\"'\n                  }\n                }\n              }\n            }\n          }\n        },\n        // ============================ Scroll ============================\n        [\"&\".concat(componentCls, \"-scroll-horizontal\")]: {\n          [\"> \".concat(componentCls, \"-container > \").concat(componentCls, \"-body\")]: {\n            '> table > tbody': {\n              [\"\\n                > tr\".concat(componentCls, \"-expanded-row,\\n                > tr\").concat(componentCls, \"-placeholder\\n              \")]: {\n                [\"> th, > td\"]: {\n                  borderInlineEnd: 0\n                }\n              }\n            }\n          }\n        }\n      }, getSizeBorderStyle('middle', token.tablePaddingVerticalMiddle, token.tablePaddingHorizontalMiddle)), getSizeBorderStyle('small', token.tablePaddingVerticalSmall, token.tablePaddingHorizontalSmall)), {\n        // ============================ Footer ============================\n        [\"> \".concat(componentCls, \"-footer\")]: {\n          border: tableBorder,\n          borderTop: 0\n        }\n      }),\n      // ============================ Nested ============================\n      [\"\".concat(componentCls, \"-cell\")]: {\n        [\"\".concat(componentCls, \"-container:first-child\")]: {\n          // :first-child to avoid the case when bordered and title is set\n          borderTop: 0\n        },\n        // https://github.com/ant-design/ant-design/issues/35577\n        '&-scrollbar:not([rowspan])': {\n          boxShadow: \"0 \".concat(token.lineWidth, \"px 0 \").concat(token.lineWidth, \"px \").concat(token.tableHeaderBg)\n        }\n      },\n      [\"\".concat(componentCls, \"-bordered \").concat(componentCls, \"-cell-scrollbar\")]: {\n        borderInlineEnd: tableBorder\n      }\n    }\n  };\n};\nexport default genBorderedStyle;","map":{"version":3,"names":["genBorderedStyle","token","componentCls","tableBorder","concat","lineWidth","lineType","tableBorderColor","getSizeBorderStyle","size","paddingVertical","paddingHorizontal","margin","Object","assign","border","borderBottom","borderInlineStart","borderTop","borderInlineEnd","backgroundColor","tablePaddingVertical","tablePaddingHorizontal","position","top","insetInlineEnd","bottom","content","tablePaddingVerticalMiddle","tablePaddingHorizontalMiddle","tablePaddingVerticalSmall","tablePaddingHorizontalSmall","boxShadow","tableHeaderBg"],"sources":["C:/Users/HP/Downloads/Alagar_Clinic-main/Alagar_Clinic-main/Frontend/node_modules/antd/es/table/style/bordered.js"],"sourcesContent":["const genBorderedStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const tableBorder = `${token.lineWidth}px ${token.lineType} ${token.tableBorderColor}`;\n  const getSizeBorderStyle = (size, paddingVertical, paddingHorizontal) => ({\n    [`&${componentCls}-${size}`]: {\n      [`> ${componentCls}-container`]: {\n        [`> ${componentCls}-content, > ${componentCls}-body`]: {\n          [`\n            > table > tbody > tr > th,\n            > table > tbody > tr > td\n          `]: {\n            [`> ${componentCls}-expanded-row-fixed`]: {\n              margin: `-${paddingVertical}px -${paddingHorizontal + token.lineWidth}px`\n            }\n          }\n        }\n      }\n    }\n  });\n  return {\n    [`${componentCls}-wrapper`]: {\n      [`${componentCls}${componentCls}-bordered`]: Object.assign(Object.assign(Object.assign({\n        // ============================ Title =============================\n        [`> ${componentCls}-title`]: {\n          border: tableBorder,\n          borderBottom: 0\n        },\n        // ============================ Content ============================\n        [`> ${componentCls}-container`]: {\n          borderInlineStart: tableBorder,\n          borderTop: tableBorder,\n          [`\n            > ${componentCls}-content,\n            > ${componentCls}-header,\n            > ${componentCls}-body,\n            > ${componentCls}-summary\n          `]: {\n            '> table': {\n              // ============================= Cell =============================\n              [`\n                > thead > tr > th,\n                > thead > tr > td,\n                > tbody > tr > th,\n                > tbody > tr > td,\n                > tfoot > tr > th,\n                > tfoot > tr > td\n              `]: {\n                borderInlineEnd: tableBorder\n              },\n              // ============================ Header ============================\n              '> thead': {\n                '> tr:not(:last-child) > th': {\n                  borderBottom: tableBorder\n                },\n                '> tr > th::before': {\n                  backgroundColor: 'transparent !important'\n                }\n              },\n              // Fixed right should provides additional border\n              [`\n                > thead > tr,\n                > tbody > tr,\n                > tfoot > tr\n              `]: {\n                [`> ${componentCls}-cell-fix-right-first::after`]: {\n                  borderInlineEnd: tableBorder\n                }\n              },\n              // ========================== Expandable ==========================\n              [`\n                > tbody > tr > th,\n                > tbody > tr > td\n              `]: {\n                [`> ${componentCls}-expanded-row-fixed`]: {\n                  margin: `-${token.tablePaddingVertical}px -${token.tablePaddingHorizontal + token.lineWidth}px`,\n                  '&::after': {\n                    position: 'absolute',\n                    top: 0,\n                    insetInlineEnd: token.lineWidth,\n                    bottom: 0,\n                    borderInlineEnd: tableBorder,\n                    content: '\"\"'\n                  }\n                }\n              }\n            }\n          }\n        },\n        // ============================ Scroll ============================\n        [`&${componentCls}-scroll-horizontal`]: {\n          [`> ${componentCls}-container > ${componentCls}-body`]: {\n            '> table > tbody': {\n              [`\n                > tr${componentCls}-expanded-row,\n                > tr${componentCls}-placeholder\n              `]: {\n                [`> th, > td`]: {\n                  borderInlineEnd: 0\n                }\n              }\n            }\n          }\n        }\n      }, getSizeBorderStyle('middle', token.tablePaddingVerticalMiddle, token.tablePaddingHorizontalMiddle)), getSizeBorderStyle('small', token.tablePaddingVerticalSmall, token.tablePaddingHorizontalSmall)), {\n        // ============================ Footer ============================\n        [`> ${componentCls}-footer`]: {\n          border: tableBorder,\n          borderTop: 0\n        }\n      }),\n      // ============================ Nested ============================\n      [`${componentCls}-cell`]: {\n        [`${componentCls}-container:first-child`]: {\n          // :first-child to avoid the case when bordered and title is set\n          borderTop: 0\n        },\n        // https://github.com/ant-design/ant-design/issues/35577\n        '&-scrollbar:not([rowspan])': {\n          boxShadow: `0 ${token.lineWidth}px 0 ${token.lineWidth}px ${token.tableHeaderBg}`\n        }\n      },\n      [`${componentCls}-bordered ${componentCls}-cell-scrollbar`]: {\n        borderInlineEnd: tableBorder\n      }\n    }\n  };\n};\nexport default genBorderedStyle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
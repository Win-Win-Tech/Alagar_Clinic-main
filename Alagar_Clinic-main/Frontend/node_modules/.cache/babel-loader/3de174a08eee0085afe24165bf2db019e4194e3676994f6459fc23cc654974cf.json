{"ast":null,"code":"import { operationUnit } from '../../style';\nconst genExpandStyle = token => {\n  const {\n    componentCls,\n    antCls,\n    controlInteractiveSize: checkboxSize,\n    motionDurationSlow,\n    lineWidth,\n    paddingXS,\n    lineType,\n    tableBorderColor,\n    tableExpandIconBg,\n    tableExpandColumnWidth,\n    borderRadius,\n    fontSize,\n    fontSizeSM,\n    lineHeight,\n    tablePaddingVertical,\n    tablePaddingHorizontal,\n    tableExpandedRowBg,\n    paddingXXS\n  } = token;\n  const halfInnerSize = checkboxSize / 2 - lineWidth;\n  // must be odd number, unless it cannot align center\n  const expandIconSize = halfInnerSize * 2 + lineWidth * 3;\n  const tableBorder = \"\".concat(lineWidth, \"px \").concat(lineType, \" \").concat(tableBorderColor);\n  const expandIconLineOffset = paddingXXS - lineWidth;\n  return {\n    [\"\".concat(componentCls, \"-wrapper\")]: {\n      [\"\".concat(componentCls, \"-expand-icon-col\")]: {\n        width: tableExpandColumnWidth\n      },\n      [\"\".concat(componentCls, \"-row-expand-icon-cell\")]: {\n        textAlign: 'center',\n        [\"\".concat(componentCls, \"-row-expand-icon\")]: {\n          display: 'inline-flex',\n          float: 'none',\n          verticalAlign: 'sub'\n        }\n      },\n      [\"\".concat(componentCls, \"-row-indent\")]: {\n        height: 1,\n        float: 'left'\n      },\n      [\"\".concat(componentCls, \"-row-expand-icon\")]: Object.assign(Object.assign({}, operationUnit(token)), {\n        position: 'relative',\n        float: 'left',\n        boxSizing: 'border-box',\n        width: expandIconSize,\n        height: expandIconSize,\n        padding: 0,\n        color: 'inherit',\n        lineHeight: \"\".concat(expandIconSize, \"px\"),\n        background: tableExpandIconBg,\n        border: tableBorder,\n        borderRadius,\n        transform: \"scale(\".concat(checkboxSize / expandIconSize, \")\"),\n        transition: \"all \".concat(motionDurationSlow),\n        userSelect: 'none',\n        [\"&:focus, &:hover, &:active\"]: {\n          borderColor: 'currentcolor'\n        },\n        [\"&::before, &::after\"]: {\n          position: 'absolute',\n          background: 'currentcolor',\n          transition: \"transform \".concat(motionDurationSlow, \" ease-out\"),\n          content: '\"\"'\n        },\n        '&::before': {\n          top: halfInnerSize,\n          insetInlineEnd: expandIconLineOffset,\n          insetInlineStart: expandIconLineOffset,\n          height: lineWidth\n        },\n        '&::after': {\n          top: expandIconLineOffset,\n          bottom: expandIconLineOffset,\n          insetInlineStart: halfInnerSize,\n          width: lineWidth,\n          transform: 'rotate(90deg)'\n        },\n        // Motion effect\n        '&-collapsed::before': {\n          transform: 'rotate(-180deg)'\n        },\n        '&-collapsed::after': {\n          transform: 'rotate(0deg)'\n        },\n        '&-spaced': {\n          '&::before, &::after': {\n            display: 'none',\n            content: 'none'\n          },\n          background: 'transparent',\n          border: 0,\n          visibility: 'hidden'\n        }\n      }),\n      [\"\".concat(componentCls, \"-row-indent + \").concat(componentCls, \"-row-expand-icon\")]: {\n        marginTop: (fontSize * lineHeight - lineWidth * 3) / 2 - Math.ceil((fontSizeSM * 1.4 - lineWidth * 3) / 2),\n        marginInlineEnd: paddingXS\n      },\n      [\"tr\".concat(componentCls, \"-expanded-row\")]: {\n        '&, &:hover': {\n          [\"> th, > td\"]: {\n            background: tableExpandedRowBg\n          }\n        },\n        // https://github.com/ant-design/ant-design/issues/25573\n        [\"\".concat(antCls, \"-descriptions-view\")]: {\n          display: 'flex',\n          table: {\n            flex: 'auto',\n            width: 'auto'\n          }\n        }\n      },\n      // With fixed\n      [\"\".concat(componentCls, \"-expanded-row-fixed\")]: {\n        position: 'relative',\n        margin: \"-\".concat(tablePaddingVertical, \"px -\").concat(tablePaddingHorizontal, \"px\"),\n        padding: \"\".concat(tablePaddingVertical, \"px \").concat(tablePaddingHorizontal, \"px\")\n      }\n    }\n  };\n};\nexport default genExpandStyle;","map":{"version":3,"names":["operationUnit","genExpandStyle","token","componentCls","antCls","controlInteractiveSize","checkboxSize","motionDurationSlow","lineWidth","paddingXS","lineType","tableBorderColor","tableExpandIconBg","tableExpandColumnWidth","borderRadius","fontSize","fontSizeSM","lineHeight","tablePaddingVertical","tablePaddingHorizontal","tableExpandedRowBg","paddingXXS","halfInnerSize","expandIconSize","tableBorder","concat","expandIconLineOffset","width","textAlign","display","float","verticalAlign","height","Object","assign","position","boxSizing","padding","color","background","border","transform","transition","userSelect","borderColor","content","top","insetInlineEnd","insetInlineStart","bottom","visibility","marginTop","Math","ceil","marginInlineEnd","table","flex","margin"],"sources":["C:/Users/HP/Downloads/Alagar_Clinic-main/Alagar_Clinic-main/Frontend/node_modules/antd/es/table/style/expand.js"],"sourcesContent":["import { operationUnit } from '../../style';\nconst genExpandStyle = token => {\n  const {\n    componentCls,\n    antCls,\n    controlInteractiveSize: checkboxSize,\n    motionDurationSlow,\n    lineWidth,\n    paddingXS,\n    lineType,\n    tableBorderColor,\n    tableExpandIconBg,\n    tableExpandColumnWidth,\n    borderRadius,\n    fontSize,\n    fontSizeSM,\n    lineHeight,\n    tablePaddingVertical,\n    tablePaddingHorizontal,\n    tableExpandedRowBg,\n    paddingXXS\n  } = token;\n  const halfInnerSize = checkboxSize / 2 - lineWidth;\n  // must be odd number, unless it cannot align center\n  const expandIconSize = halfInnerSize * 2 + lineWidth * 3;\n  const tableBorder = `${lineWidth}px ${lineType} ${tableBorderColor}`;\n  const expandIconLineOffset = paddingXXS - lineWidth;\n  return {\n    [`${componentCls}-wrapper`]: {\n      [`${componentCls}-expand-icon-col`]: {\n        width: tableExpandColumnWidth\n      },\n      [`${componentCls}-row-expand-icon-cell`]: {\n        textAlign: 'center',\n        [`${componentCls}-row-expand-icon`]: {\n          display: 'inline-flex',\n          float: 'none',\n          verticalAlign: 'sub'\n        }\n      },\n      [`${componentCls}-row-indent`]: {\n        height: 1,\n        float: 'left'\n      },\n      [`${componentCls}-row-expand-icon`]: Object.assign(Object.assign({}, operationUnit(token)), {\n        position: 'relative',\n        float: 'left',\n        boxSizing: 'border-box',\n        width: expandIconSize,\n        height: expandIconSize,\n        padding: 0,\n        color: 'inherit',\n        lineHeight: `${expandIconSize}px`,\n        background: tableExpandIconBg,\n        border: tableBorder,\n        borderRadius,\n        transform: `scale(${checkboxSize / expandIconSize})`,\n        transition: `all ${motionDurationSlow}`,\n        userSelect: 'none',\n        [`&:focus, &:hover, &:active`]: {\n          borderColor: 'currentcolor'\n        },\n        [`&::before, &::after`]: {\n          position: 'absolute',\n          background: 'currentcolor',\n          transition: `transform ${motionDurationSlow} ease-out`,\n          content: '\"\"'\n        },\n        '&::before': {\n          top: halfInnerSize,\n          insetInlineEnd: expandIconLineOffset,\n          insetInlineStart: expandIconLineOffset,\n          height: lineWidth\n        },\n        '&::after': {\n          top: expandIconLineOffset,\n          bottom: expandIconLineOffset,\n          insetInlineStart: halfInnerSize,\n          width: lineWidth,\n          transform: 'rotate(90deg)'\n        },\n        // Motion effect\n        '&-collapsed::before': {\n          transform: 'rotate(-180deg)'\n        },\n        '&-collapsed::after': {\n          transform: 'rotate(0deg)'\n        },\n        '&-spaced': {\n          '&::before, &::after': {\n            display: 'none',\n            content: 'none'\n          },\n          background: 'transparent',\n          border: 0,\n          visibility: 'hidden'\n        }\n      }),\n      [`${componentCls}-row-indent + ${componentCls}-row-expand-icon`]: {\n        marginTop: (fontSize * lineHeight - lineWidth * 3) / 2 - Math.ceil((fontSizeSM * 1.4 - lineWidth * 3) / 2),\n        marginInlineEnd: paddingXS\n      },\n      [`tr${componentCls}-expanded-row`]: {\n        '&, &:hover': {\n          [`> th, > td`]: {\n            background: tableExpandedRowBg\n          }\n        },\n        // https://github.com/ant-design/ant-design/issues/25573\n        [`${antCls}-descriptions-view`]: {\n          display: 'flex',\n          table: {\n            flex: 'auto',\n            width: 'auto'\n          }\n        }\n      },\n      // With fixed\n      [`${componentCls}-expanded-row-fixed`]: {\n        position: 'relative',\n        margin: `-${tablePaddingVertical}px -${tablePaddingHorizontal}px`,\n        padding: `${tablePaddingVertical}px ${tablePaddingHorizontal}px`\n      }\n    }\n  };\n};\nexport default genExpandStyle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
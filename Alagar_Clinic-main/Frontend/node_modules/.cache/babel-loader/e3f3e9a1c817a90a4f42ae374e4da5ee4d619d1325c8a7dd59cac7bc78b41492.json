{"ast":null,"code":"export const roundedArrow = (width, innerRadius, outerRadius, bgColor, boxShadow) => {\n  const unitWidth = width / 2;\n  const ax = 0;\n  const ay = unitWidth;\n  const bx = outerRadius * 1 / Math.sqrt(2);\n  const by = unitWidth - outerRadius * (1 - 1 / Math.sqrt(2));\n  const cx = unitWidth - innerRadius * (1 / Math.sqrt(2));\n  const cy = outerRadius * (Math.sqrt(2) - 1) + innerRadius * (1 / Math.sqrt(2));\n  const dx = 2 * unitWidth - cx;\n  const dy = cy;\n  const ex = 2 * unitWidth - bx;\n  const ey = by;\n  const fx = 2 * unitWidth - ax;\n  const fy = ay;\n  const shadowWidth = unitWidth * Math.sqrt(2) + outerRadius * (Math.sqrt(2) - 2);\n  const polygonOffset = outerRadius * (Math.sqrt(2) - 1);\n  return {\n    pointerEvents: 'none',\n    width,\n    height: width,\n    overflow: 'hidden',\n    '&::before': {\n      position: 'absolute',\n      bottom: 0,\n      insetInlineStart: 0,\n      width,\n      height: width / 2,\n      background: bgColor,\n      clipPath: {\n        _multi_value_: true,\n        value: [\"polygon(\".concat(polygonOffset, \"px 100%, 50% \").concat(polygonOffset, \"px, \").concat(2 * unitWidth - polygonOffset, \"px 100%, \").concat(polygonOffset, \"px 100%)\"), \"path('M \".concat(ax, \" \").concat(ay, \" A \").concat(outerRadius, \" \").concat(outerRadius, \" 0 0 0 \").concat(bx, \" \").concat(by, \" L \").concat(cx, \" \").concat(cy, \" A \").concat(innerRadius, \" \").concat(innerRadius, \" 0 0 1 \").concat(dx, \" \").concat(dy, \" L \").concat(ex, \" \").concat(ey, \" A \").concat(outerRadius, \" \").concat(outerRadius, \" 0 0 0 \").concat(fx, \" \").concat(fy, \" Z')\")]\n      },\n      content: '\"\"'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: shadowWidth,\n      height: shadowWidth,\n      bottom: 0,\n      insetInline: 0,\n      margin: 'auto',\n      borderRadius: {\n        _skip_check_: true,\n        value: \"0 0 \".concat(innerRadius, \"px 0\")\n      },\n      transform: 'translateY(50%) rotate(-135deg)',\n      boxShadow,\n      zIndex: 0,\n      background: 'transparent'\n    }\n  };\n};","map":{"version":3,"names":["roundedArrow","width","innerRadius","outerRadius","bgColor","boxShadow","unitWidth","ax","ay","bx","Math","sqrt","by","cx","cy","dx","dy","ex","ey","fx","fy","shadowWidth","polygonOffset","pointerEvents","height","overflow","position","bottom","insetInlineStart","background","clipPath","_multi_value_","value","concat","content","insetInline","margin","borderRadius","_skip_check_","transform","zIndex"],"sources":["C:/Users/HP/Downloads/Alagar_Clinic-main/Alagar_Clinic-main/Frontend/node_modules/antd/es/style/roundedArrow.js"],"sourcesContent":["export const roundedArrow = (width, innerRadius, outerRadius, bgColor, boxShadow) => {\n  const unitWidth = width / 2;\n  const ax = 0;\n  const ay = unitWidth;\n  const bx = outerRadius * 1 / Math.sqrt(2);\n  const by = unitWidth - outerRadius * (1 - 1 / Math.sqrt(2));\n  const cx = unitWidth - innerRadius * (1 / Math.sqrt(2));\n  const cy = outerRadius * (Math.sqrt(2) - 1) + innerRadius * (1 / Math.sqrt(2));\n  const dx = 2 * unitWidth - cx;\n  const dy = cy;\n  const ex = 2 * unitWidth - bx;\n  const ey = by;\n  const fx = 2 * unitWidth - ax;\n  const fy = ay;\n  const shadowWidth = unitWidth * Math.sqrt(2) + outerRadius * (Math.sqrt(2) - 2);\n  const polygonOffset = outerRadius * (Math.sqrt(2) - 1);\n  return {\n    pointerEvents: 'none',\n    width,\n    height: width,\n    overflow: 'hidden',\n    '&::before': {\n      position: 'absolute',\n      bottom: 0,\n      insetInlineStart: 0,\n      width,\n      height: width / 2,\n      background: bgColor,\n      clipPath: {\n        _multi_value_: true,\n        value: [`polygon(${polygonOffset}px 100%, 50% ${polygonOffset}px, ${2 * unitWidth - polygonOffset}px 100%, ${polygonOffset}px 100%)`, `path('M ${ax} ${ay} A ${outerRadius} ${outerRadius} 0 0 0 ${bx} ${by} L ${cx} ${cy} A ${innerRadius} ${innerRadius} 0 0 1 ${dx} ${dy} L ${ex} ${ey} A ${outerRadius} ${outerRadius} 0 0 0 ${fx} ${fy} Z')`]\n      },\n      content: '\"\"'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: shadowWidth,\n      height: shadowWidth,\n      bottom: 0,\n      insetInline: 0,\n      margin: 'auto',\n      borderRadius: {\n        _skip_check_: true,\n        value: `0 0 ${innerRadius}px 0`\n      },\n      transform: 'translateY(50%) rotate(-135deg)',\n      boxShadow,\n      zIndex: 0,\n      background: 'transparent'\n    }\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
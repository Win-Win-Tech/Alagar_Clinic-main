{"ast":null,"code":"import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    lineHeight: \"\".concat(size - lineWidth * 2, \"px\"),\n    borderRadius: '50%',\n    [\"&\".concat(componentCls, \"-square\")]: {\n      borderRadius: radius\n    },\n    [\"\".concat(componentCls, \"-string\")]: {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    },\n    [\"&\".concat(componentCls, \"-icon\")]: {\n      fontSize,\n      [\"> \".concat(iconCls)]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: \"\".concat(lineWidth, \"px \").concat(lineType, \" transparent\"),\n      [\"&-image\"]: {\n        background: 'transparent'\n      },\n      [\"\".concat(antCls, \"-image-img\")]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\n      [\"&-lg\"]: Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\n      [\"&-sm\"]: Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [\"\".concat(componentCls, \"-group\")]: {\n      display: 'inline-flex',\n      [\"\".concat(componentCls)]: {\n        borderColor: groupBorderColor\n      },\n      [\"> *:not(:first-child)\"]: {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [\"\".concat(componentCls, \"-group-popover\")]: {\n      [\"\".concat(componentCls, \" + \").concat(componentCls)]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    textFontSizeLG: fontSizeHeading3,\n    textFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n});","map":{"version":3,"names":["resetComponent","genComponentStyleHook","mergeToken","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","containerSize","containerSizeLG","containerSizeSM","textFontSize","textFontSizeLG","textFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","lineHeight","concat","position","left","_skip_check_","value","transformOrigin","margin","Object","assign","display","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","objectFit","genGroupStyle","groupBorderColor","groupOverlapping","groupSpace","borderColor","marginInlineStart","colorTextLightSolid","colorTextPlaceholder","avatarToken","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","marginXXS","colorBorderBg","Math","round"],"sources":["C:/Users/HP/Downloads/Alagar_Clinic-main/Alagar_Clinic-main/Frontend/node_modules/antd/es/avatar/style/index.js"],"sourcesContent":["import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    lineHeight: `${size - lineWidth * 2}px`,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`${componentCls}-string`]: {\n      position: 'absolute',\n      left: {\n        _skip_check_: true,\n        value: '50%'\n      },\n      transformOrigin: '0 center'\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${lineWidth}px ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\n      [`&-lg`]: Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: groupBorderColor\n      },\n      [`> *:not(:first-child)`]: {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [`${componentCls}-group-popover`]: {\n      [`${componentCls} + ${componentCls}`]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nexport default genComponentStyleHook('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    textFontSizeLG: fontSizeHeading3,\n    textFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
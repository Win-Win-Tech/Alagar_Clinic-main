{"ast":null,"code":"import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { TinyColor } from '@ctrl/tinycolor';\n// ============================== Styles ==============================\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: \"\".concat(token.lineWidth, \"px \").concat(token.lineType, \" \").concat(token.colorBorder),\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: \"all \".concat(token.motionDurationMid),\n      textAlign: 'start',\n      position: 'relative',\n      // RTL\n      [\"&\".concat(componentCls, \"-rtl\")]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [\"\".concat(componentCls, \"-close-icon\")]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: \"all \".concat(token.motionDurationMid),\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [\"&\".concat(componentCls, \"-has-color\")]: {\n        borderColor: 'transparent',\n        [\"&, a, a:hover, \".concat(token.iconCls, \"-close, \").concat(token.iconCls, \"-close:hover\")]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [\"&-checkable\"]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [\"&:not(\".concat(componentCls, \"-checkable-checked):hover\")]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [\"&-hidden\"]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [\"> \".concat(token.iconCls, \" + span, > span + \").concat(token.iconCls)]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [\"\".concat(componentCls, \"-borderless\")]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = \"\".concat(token.lineHeightSM * tagFontSize, \"px\");\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return tagToken;\n};\nexport const prepareCommonToken = token => ({\n  defaultBg: new TinyColor(token.colorFillQuaternary).onBackground(token.colorBgContainer).toHexString(),\n  defaultColor: token.colorText\n});\nexport default genComponentStyleHook('Tag', token => {\n  const tagToken = prepareToken(token);\n  return genBaseStyle(tagToken);\n}, prepareCommonToken);","map":{"version":3,"names":["resetComponent","genComponentStyleHook","mergeToken","TinyColor","genBaseStyle","token","paddingXXS","lineWidth","tagPaddingHorizontal","componentCls","paddingInline","iconMarginInline","Object","assign","display","height","marginInlineEnd","marginXS","fontSize","tagFontSize","lineHeight","tagLineHeight","whiteSpace","background","defaultBg","border","concat","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","position","direction","color","defaultColor","marginInlineStart","colorTextDescription","tagIconSize","cursor","colorTextHeading","borderColor","iconCls","colorTextLightSolid","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","tagBorderlessBg","prepareToken","fontSizeIcon","fontSizeSM","lineHeightSM","tagToken","colorFillTertiary","prepareCommonToken","colorFillQuaternary","onBackground","colorBgContainer","toHexString","colorText"],"sources":["C:/Users/HP/Downloads/Alagar_Clinic-main/Alagar_Clinic-main/Frontend/node_modules/antd/es/tag/style/index.js"],"sourcesContent":["import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { TinyColor } from '@ctrl/tinycolor';\n// ============================== Styles ==============================\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      position: 'relative',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = `${token.lineHeightSM * tagFontSize}px`;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8,\n    tagBorderlessBg: token.colorFillTertiary\n  });\n  return tagToken;\n};\nexport const prepareCommonToken = token => ({\n  defaultBg: new TinyColor(token.colorFillQuaternary).onBackground(token.colorBgContainer).toHexString(),\n  defaultColor: token.colorText\n});\nexport default genComponentStyleHook('Tag', token => {\n  const tagToken = prepareToken(token);\n  return genBaseStyle(tagToken);\n}, prepareCommonToken);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}